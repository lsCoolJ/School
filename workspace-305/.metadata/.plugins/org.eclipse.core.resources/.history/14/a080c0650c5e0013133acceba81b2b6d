package epidemic.progpracticum.model;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;

import epidemic.progpracticum.view.WorldPanel;

public class MyButtonListener implements ActionListener {
    
    private JButton myStep;
    private JButton myGenerate;
    private WorldPanel myWorldPanel;
    private JLabel myPeepNum;
    private JLabel myBirdNum;
    private JLabel myInfectNum;
    private JTextField myPeepInfect;
    private JTextField myPeepHealthy;
    private JTextField myBirdInfect;
    private JTextField myBirdHealthy;
    private JTextField myDayCounter;
    private SimWorld mySimWorld;
    
    
    private Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    private int width = screenSize.width;
    private int height = screenSize.height;
    
    public MyButtonListener(final JButton aStep, final JButton aGenerate,
                            final WorldPanel aWorldPanel, final JLabel aPeepNum,
                            final JLabel aBirdNum, final JLabel anInfectNum,
                            final JTextField aPeepInfect, final JTextField aPeepHealthy,
                            final JTextField aBirdInfect, final JTextField aBirdHealthy,
                            final JTextField aDayCounter) {
        super();
        myStep = aStep;
        myGenerate = aGenerate;
        myWorldPanel = aWorldPanel;
        myPeepNum = aPeepNum;
        myBirdNum = aBirdNum;
        myInfectNum = anInfectNum;
        myPeepInfect = aPeepInfect;
        myPeepHealthy = aPeepHealthy;
        myBirdInfect = aBirdInfect;
        myBirdHealthy = aBirdHealthy;
        myDayCounter = aDayCounter;
    }

    @Override
    public void actionPerformed(ActionEvent anE) { 
        final String sourceName = anE.getActionCommand();
        System.out.println(sourceName);
        
        if ("Start".equals(sourceName)) {
            myStep.setEnabled(false);
            mySimWorld.startTimer();
            myGenerate.setEnabled(false);
        }
        
        if ("Stop".equals(sourceName)) {
            mySimWorld.stopTimer();
        }
        
        if ("Step".equals(sourceName)) {
            
        }
        
        if ("Reset".equals(sourceName)) {
            //myWorldPanel.removeAll();
            myStep.setEnabled(false);
            myGenerate.setEnabled(true);
            myDayCounter.setText("0");
        }
        
        if ("Generate World".equals(sourceName)) {
            final int thisPeepNum = Integer.parseInt(myPeepNum.getText());
            final int thisBirdNum = Integer.parseInt(myBirdNum.getText());
            final double thisInfectNum = Double.parseDouble(myInfectNum.getText());
            
            final int trueInfectNum = (int) Math.round((thisInfectNum / 100) * thisBirdNum);
            final int trueBirdNum = thisBirdNum - trueInfectNum;
            
            mySimWorld = new SimWorld(myWorldPanel, thisPeepNum, trueBirdNum, trueInfectNum,
                                      myPeepInfect, myPeepHealthy, myBirdInfect, myBirdHealthy,
                                      myDayCounter);
        }
    }
}
