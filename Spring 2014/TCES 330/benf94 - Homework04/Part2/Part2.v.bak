/* Homework 4 Part 2 written by Ben Foster
 * TCES 330 5/13/14
 */

module Part2(SW, KEY, LEDR, LEDG, Z);
  input [1:0] SW; //Input Switches
  input [0:0] KEY; //Manual Clock input
  output Z; //Output Z
  output [3:0] LEDR; //Red LEDS to indicate state
  output [0:0] LEDG; //Green LEDS to show output

  wire reset = SW[0];
  wire w = SW[1];
  wire Clock = KEY[0];
  reg [3:0] currState, nextState;
  assign LEDG[0] = Z;
  assign LEDR = currState;
  localparam A = 4'b0000, B = 4'b0001, C = 4'b0010,
      D = 4'b0011, E = 4'b0100, F = 4'b0101, G = 4'b0110,
      H = 4'b0111, I = 4'b1000;
  
  always @(w, currState)
  begin: state_table
    case(currState)
      A : if(!w) nextState = B;
        else nextState = F;
      B : if(!w) nextState = C;
	else nextState = F;
      C : if(!w) nextState = D;
	else nextState = F;
      D : if(!w) nextState = E;
	else nextState = F;
      E : if(!w) nextState = E;
	else nextState = F;
      F : if(!w) nextState = B;
	else nextState = G;
      G : if(!w) nextState = B;
	else nextState = H;
      H : if(!w) nextState = B;
	else nextState = I;
      I : if(!w) nextState = B;
	else nextState = I;
      default : nextState = 4'bxxxx;
    endcase
  end //state_table

  always @(posedge Clock)
  begin : state_FFs
    if(~reset) begin
      currState <= A;
      Z <= 0;
    end
    currState <= nextState;
    if(nextState == E || nextState == I)
      Z <= 1;
  end //state_FFs
endmodule
